1.哪些寄存器保存函数的参数？例如，在main对printf的调用中，哪个寄存器保存13？
函数参数的寄存器为 a0~a7. printf 的 13 存在寄存器 a2 中

2.main的汇编代码中对函数f的调用在哪里？对g的调用在哪里(提示：编译器可能会将函数内联）
在 40 行可以看到, 编译器进行了函数内联, 直接将 f(8)+1的值 12 计算出来了

3.printf函数位于哪个地址？
由第 43 和 44 行可以看出, jalr 跳转的地址为 0x30+1536=0x630, 即函数 printf 的地址为 0x630

4.在main中printf的jalr之后的寄存器ra中有什么值？
根据 jalr 指令的功能, 在刚跳转后 ra 的值为 pc+4=0x34+4=0x38.

5.运行以下代码。
unsigned int i = 0x00646c72;
printf("H%x Wo%s", 57616, &i);
程序的输出是什么？
输出: HE110 World

输出取决于RISC-V小端存储的事实。如果RISC-V是大端存储，为了得到相同的输出，你会把i设置成什么？是否需要将57616更改为其他值？
若为大端对齐, i 需要设置为 0x726c6400, 不需要改变 57616的值(因为他是按照二进制数字读取的而非单个字符).

在下面的代码中，“y=”之后将打印什么(注：答案不是一个特定的值）？为什么会发生这种情况？
printf("x=%d y=%d", 3);
根据函数的传参规则, y= 后跟的值应该为寄存器 a2 的值.


